# PIPELINE DEFINITION
# Name: primary-pipeline
components:
  comp-analyze-artifact:
    executorLabel: exec-analyze-artifact
    inputDefinitions:
      artifacts:
        analyze_artifact_input:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        analyze_output_artifact:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-condition-2:
    dag:
      tasks:
        analyze-artifact:
          cachingOptions: {}
          componentRef:
            name: comp-analyze-artifact
          dependentTasks:
          - process-dataset
          inputs:
            artifacts:
              analyze_artifact_input:
                taskOutputArtifact:
                  outputArtifactKey: output_artifact
                  producerTask: process-dataset
          taskInfo:
            name: analyze-artifact
        process-dataset:
          cachingOptions: {}
          componentRef:
            name: comp-process-dataset
          inputs:
            artifacts:
              input_dataset:
                componentInputArtifact: pipelinechannel--create-dataset-output_dataset
            parameters:
              some_param:
                runtimeValue:
                  constant: this
          taskInfo:
            name: process-dataset
    inputDefinitions:
      artifacts:
        pipelinechannel--create-dataset-output_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        pipelinechannel--create-dataset-condition_result:
          parameterType: STRING
  comp-condition-3:
    dag:
      tasks:
        process-dataset-2:
          cachingOptions: {}
          componentRef:
            name: comp-process-dataset-2
          inputs:
            artifacts:
              input_dataset:
                componentInputArtifact: pipelinechannel--create-dataset-output_dataset
            parameters:
              some_param:
                runtimeValue:
                  constant: that
          taskInfo:
            name: process-dataset-2
    inputDefinitions:
      artifacts:
        pipelinechannel--create-dataset-output_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        pipelinechannel--create-dataset-condition_result:
          parameterType: STRING
  comp-condition-branches-1:
    dag:
      tasks:
        condition-2:
          componentRef:
            name: comp-condition-2
          inputs:
            artifacts:
              pipelinechannel--create-dataset-output_dataset:
                componentInputArtifact: pipelinechannel--create-dataset-output_dataset
            parameters:
              pipelinechannel--create-dataset-condition_result:
                componentInputParameter: pipelinechannel--create-dataset-condition_result
          taskInfo:
            name: condition-2
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--create-dataset-condition_result']
              == 'this'
        condition-3:
          componentRef:
            name: comp-condition-3
          inputs:
            artifacts:
              pipelinechannel--create-dataset-output_dataset:
                componentInputArtifact: pipelinechannel--create-dataset-output_dataset
            parameters:
              pipelinechannel--create-dataset-condition_result:
                componentInputParameter: pipelinechannel--create-dataset-condition_result
          taskInfo:
            name: condition-3
          triggerPolicy:
            condition: '!(inputs.parameter_values[''pipelinechannel--create-dataset-condition_result'']
              == ''this'')'
    inputDefinitions:
      artifacts:
        pipelinechannel--create-dataset-output_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        pipelinechannel--create-dataset-condition_result:
          parameterType: STRING
  comp-create-dataset:
    executorLabel: exec-create-dataset
    outputDefinitions:
      artifacts:
        output_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        condition_result:
          parameterType: STRING
  comp-process-dataset:
    executorLabel: exec-process-dataset
    inputDefinitions:
      artifacts:
        input_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        some_param:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        output_artifact:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-process-dataset-2:
    executorLabel: exec-process-dataset-2
    inputDefinitions:
      artifacts:
        input_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        some_param:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        output_artifact:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-analyze-artifact:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - analyze_artifact
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef analyze_artifact(analyze_artifact_input: Input[Artifact], analyze_output_artifact:\
          \ Output[Artifact]):\n    with open(analyze_artifact_input.path, \"r\")\
          \ as f:\n        data = f.read()\n    with open(analyze_output_artifact.path,\
          \ \"w\") as f:\n        f.write(f'{{\"values\": {data}}}')\n\n"
        image: python:3.9
    exec-create-dataset:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - create_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef create_dataset(output_dataset: Output[Dataset], condition_result:\
          \ dsl.OutputPath(str)):\n    with open(output_dataset.path, \"w\") as f:\n\
          \        f.write('{\"values\": [1, 2, 3, 4, 5]}')\n    output_dataset.metadata[\"\
          item_count\"] = 5\n    output_dataset.metadata[\"description\"] = \"A simple\
          \ dataset with integers\"\n    with open(condition_result, 'w') as f:\n\
          \        f.write(\"this\")\n\n"
        image: python:3.9
    exec-process-dataset:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - process_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef process_dataset(some_param: str, input_dataset: Input[Dataset],\
          \ output_artifact: Output[Artifact]):\n    with open(input_dataset.path,\
          \ \"r\") as f:\n        data = f.read()\n    with open(output_artifact.path,\
          \ \"w\") as f:\n        f.write(f'{{\"values\": {data}}}')\n\n"
        image: python:3.9
    exec-process-dataset-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - process_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef process_dataset(some_param: str, input_dataset: Input[Dataset],\
          \ output_artifact: Output[Artifact]):\n    with open(input_dataset.path,\
          \ \"r\") as f:\n        data = f.read()\n    with open(output_artifact.path,\
          \ \"w\") as f:\n        f.write(f'{{\"values\": {data}}}')\n\n"
        image: python:3.9
pipelineInfo:
  name: primary-pipeline
root:
  dag:
    tasks:
      condition-branches-1:
        componentRef:
          name: comp-condition-branches-1
        dependentTasks:
        - create-dataset
        inputs:
          artifacts:
            pipelinechannel--create-dataset-output_dataset:
              taskOutputArtifact:
                outputArtifactKey: output_dataset
                producerTask: create-dataset
          parameters:
            pipelinechannel--create-dataset-condition_result:
              taskOutputParameter:
                outputParameterKey: condition_result
                producerTask: create-dataset
        taskInfo:
          name: condition-branches-1
      create-dataset:
        cachingOptions: {}
        componentRef:
          name: comp-create-dataset
        taskInfo:
          name: create-dataset
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.2
