# PIPELINE DEFINITION
# Name: primary-pipeline
components:
  comp-create-file:
    executorLabel: exec-create-file
    inputDefinitions:
      parameters:
        content:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        file:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-for-loop-1:
    dag:
      outputs:
        parameters:
          pipelinechannel--read-single-file-Output:
            valueFromParameter:
              outputParameterKey: Output
              producerSubtask: read-single-file
      tasks:
        create-file:
          cachingOptions: {}
          componentRef:
            name: comp-create-file
          inputs:
            parameters:
              content:
                componentInputParameter: pipelinechannel--split-ids-Output-loop-item
          taskInfo:
            name: create-file
        read-single-file:
          cachingOptions: {}
          componentRef:
            name: comp-read-single-file
          dependentTasks:
          - create-file
          inputs:
            artifacts:
              file:
                taskOutputArtifact:
                  outputArtifactKey: file
                  producerTask: create-file
            parameters:
              expected:
                componentInputParameter: pipelinechannel--split-ids-Output-loop-item
          taskInfo:
            name: read-single-file
    inputDefinitions:
      parameters:
        pipelinechannel--split-ids-Output:
          parameterType: LIST
        pipelinechannel--split-ids-Output-loop-item:
          parameterType: STRING
    outputDefinitions:
      parameters:
        pipelinechannel--read-single-file-Output:
          parameterType: LIST
  comp-read-single-file:
    executorLabel: exec-read-single-file
    inputDefinitions:
      artifacts:
        file:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        expected:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-read-values:
    executorLabel: exec-read-values
    inputDefinitions:
      parameters:
        values:
          parameterType: LIST
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-read-values-2:
    executorLabel: exec-read-values-2
    inputDefinitions:
      parameters:
        values:
          parameterType: LIST
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-secondary-pipeline:
    dag:
      outputs:
        parameters:
          Output:
            valueFromParameter:
              outputParameterKey: pipelinechannel--read-single-file-Output
              producerSubtask: for-loop-1
      tasks:
        for-loop-1:
          componentRef:
            name: comp-for-loop-1
          dependentTasks:
          - split-ids
          inputs:
            parameters:
              pipelinechannel--split-ids-Output:
                taskOutputParameter:
                  outputParameterKey: Output
                  producerTask: split-ids
          parameterIterator:
            itemInput: pipelinechannel--split-ids-Output-loop-item
            items:
              inputParameter: pipelinechannel--split-ids-Output
          taskInfo:
            name: for-loop-1
        read-values:
          cachingOptions: {}
          componentRef:
            name: comp-read-values
          dependentTasks:
          - for-loop-1
          inputs:
            parameters:
              values:
                taskOutputParameter:
                  outputParameterKey: pipelinechannel--read-single-file-Output
                  producerTask: for-loop-1
          taskInfo:
            name: read-values
        split-ids:
          cachingOptions: {}
          componentRef:
            name: comp-split-ids
          inputs:
            parameters:
              model_ids:
                componentInputParameter: model_ids
          taskInfo:
            name: split-ids
    inputDefinitions:
      parameters:
        model_ids:
          defaultValue: ''
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: LIST
  comp-split-ids:
    executorLabel: exec-split-ids
    inputDefinitions:
      parameters:
        model_ids:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: LIST
deploymentSpec:
  executors:
    exec-create-file:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - create_file
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef create_file(file: Output[Artifact], content: str):\n    print(f'Creating\
          \ file with content: {content}')\n    with open(file.path, 'w') as f:\n\
          \        f.write(content)\n\n"
        image: python:3.9
    exec-read-single-file:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - read_single_file
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef read_single_file(file: Artifact, expected: str) -> str:\n   \
          \ print(f'Reading file: {file.path}')\n    with open(file.path, 'r') as\
          \ f:\n        data = f.read()\n        print(data)\n        assert expected\
          \ == data\n    return data\n\n"
        image: python:3.9
    exec-read-values:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - read_values
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef read_values(values: List[str]) -> str:\n    collect = []\n  \
          \  for v in values:\n        collect.append(v)\n    print(collect)\n   \
          \ assert collect == ['s1', 's2', 's3']\n    return 'values read'\n\n"
        image: python:3.9
    exec-read-values-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - read_values
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef read_values(values: List[str]) -> str:\n    collect = []\n  \
          \  for v in values:\n        collect.append(v)\n    print(collect)\n   \
          \ assert collect == ['s1', 's2', 's3']\n    return 'values read'\n\n"
        image: python:3.9
    exec-split-ids:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - split_ids
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef split_ids(model_ids: str) -> list:\n    return model_ids.split(',')\n\
          \n"
        image: python:3.9
pipelineInfo:
  name: primary-pipeline
root:
  dag:
    tasks:
      read-values:
        cachingOptions: {}
        componentRef:
          name: comp-read-values-2
        dependentTasks:
        - secondary-pipeline
        inputs:
          parameters:
            values:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: secondary-pipeline
        taskInfo:
          name: read-values
      secondary-pipeline:
        cachingOptions: {}
        componentRef:
          name: comp-secondary-pipeline
        inputs:
          parameters:
            model_ids:
              runtimeValue:
                constant: s1,s2,s3
        taskInfo:
          name: secondary-pipeline
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.2
