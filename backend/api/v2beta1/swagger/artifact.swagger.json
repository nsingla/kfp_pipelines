{
  "swagger": "2.0",
  "info": {
    "title": "backend/api/v2beta1/artifact.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ArtifactService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/v2beta1/artifact_tasks": {
      "get": {
        "summary": "Lists artifact-task relationships.",
        "operationId": "list_artifact_tasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListArtifactTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "task_ids",
            "description": "Optional, filter artifact task by a set of task_ids\nWe can also likely just rely on filter for this and omit this field",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "run_ids",
            "description": "Optional, filter artifact task by a set of run_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "artifact_ids",
            "description": "Optional, filter artifact task by a set of artifact_ids\nWe can also likely just rely on filter for this and omit this field",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "description": "Optional. Only list artifact tasks that have artifacts of this type.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "INPUT",
              "OUTPUT"
            ],
            "default": "INPUT"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ArtifactService"
        ]
      },
      "post": {
        "summary": "Creates an artifact-task relationship.",
        "operationId": "create_artifact_task",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ArtifactTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1CreateArtifactTaskRequest"
            }
          }
        ],
        "tags": [
          "ArtifactService"
        ]
      }
    },
    "/apis/v2beta1/artifact_tasks:batchCreate": {
      "post": {
        "summary": "Creates multiple artifact-task relationships in bulk.",
        "operationId": "batch_create_artifact_tasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1CreateArtifactTasksBulkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1CreateArtifactTasksBulkRequest"
            }
          }
        ],
        "tags": [
          "ArtifactService"
        ]
      }
    },
    "/apis/v2beta1/artifacts": {
      "get": {
        "summary": "Finds all artifacts within the specified namespace.",
        "operationId": "list_artifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1ListArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Optional input. Namespace for the artifacts.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_token",
            "description": "A page token to request the results page.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "The number of artifacts to be listed per page. If there are more artifacts\nthan this number, the response message will contain a valid value in the\nnextPageToken field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "description": "Sorting order in form of \"field_name\", \"field_name asc\" or \"field_name desc\".\nAscending by default.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "A url-encoded, JSON-serialized filter protocol buffer (see\n[filter.proto](https://github.com/kubeflow/artifacts/blob/master/backend/api/filter.proto)).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ArtifactService"
        ]
      },
      "post": {
        "summary": "Creates a new artifact.",
        "operationId": "create_artifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1Artifact"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2beta1CreateArtifactRequest"
            }
          }
        ],
        "tags": [
          "ArtifactService"
        ]
      }
    },
    "/apis/v2beta1/artifacts/{artifact_id}": {
      "get": {
        "summary": "Finds a specific Artifact by ID.",
        "operationId": "get_artifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2beta1Artifact"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "artifact_id",
            "description": "Required. The ID of the artifact to be retrieved.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ArtifactService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactArtifactType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "Artifact",
        "Model",
        "Dataset",
        "HTML",
        "Markdown",
        "Metric",
        "ClassificationMetric",
        "SlicedClassificationMetric"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": " - TYPE_UNSPECIFIED: default; treated as \"not set\"\nreject if unset."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v2beta1Artifact": {
      "type": "object",
      "properties": {
        "artifact_id": {
          "type": "string",
          "title": "Output only. The unique server generated id of the artifact.\nNote: Updated id name to be consistent with other api naming patterns (with prefix)",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. The client provided name of the artifact.\nNote: it seems in MLMD when name was set, it had to be unique for that type_id\nthis restriction is removed here\nIf this is a \"Metric\" artifact, the name of the metric\nis treated as the Key in its K/V pair."
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ArtifactArtifactType",
          "title": "Required. The name of an ArtifactType. E.g. Dataset"
        },
        "uri": {
          "type": "string",
          "description": "The uniform resource identifier of the physical artifact.\nMay be empty if there is no physical artifact."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {},
          "description": "Optional. User provided custom properties which are not defined by its type."
        },
        "number_value": {
          "type": "number",
          "format": "double",
          "title": "Used primarily for metrics"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Output only. Create time of the artifact in millisecond since epoch.\nNote: The type and name is updated from mlmd artifact to be consistent with other backend apis.",
          "readOnly": true
        },
        "namespace": {
          "type": "string"
        }
      },
      "title": "Note to be confused with RuntimeArtifact in pipelinespec"
    },
    "v2beta1ArtifactTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Output only. The unique server generated id of the ArtifactTask.",
          "readOnly": true
        },
        "artifact_id": {
          "type": "string"
        },
        "run_id": {
          "type": "string"
        },
        "task_id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v2beta1ArtifactTaskType"
        },
        "producer_task_name": {
          "type": "string",
          "description": "The task that produced this artifact\nFor example in the case of a pipeline channel\nthat is an output artifact you might have as\ninput something like the following in the IR:\n  taskOutputArtifact:\n    outputArtifactKey: output_dataset\n    producerTask: create-dataset\nThese fields are used to track this lineage.\n\nFor outputs, the producer task is the component name\nof the task that produced the artifact."
        },
        "producer_key": {
          "type": "string",
          "description": "For outputs, the key is the name of the parameter\nin the component spec (found in OutputDefinitions)\nused to output the artifact.",
          "title": "The key is often the parameter name used\nas input/output on the component, but\ncan also take on the value of of other values.\nFor example:\n * \"param-#\" when using parameters in a ParallelFor\n * \"Output\" when using Pythonic Artifacts"
        },
        "artifact_key": {
          "type": "string",
          "description": "The parameter name for the input/output artifact\nThis maybe the same as the Artifact name if the\nartifact name is not specified. It is used to\nresolve artifact pipeline channels."
        }
      }
    },
    "v2beta1ArtifactTaskType": {
      "type": "string",
      "enum": [
        "INPUT",
        "OUTPUT"
      ],
      "default": "INPUT",
      "title": "Describes the I/O relationship between\nthis Artifact and Task"
    },
    "v2beta1CreateArtifactRequest": {
      "type": "object",
      "properties": {
        "artifact": {
          "$ref": "#/definitions/v2beta1Artifact",
          "description": "Required. The artifact to create."
        },
        "run_id": {
          "type": "string",
          "description": "An artifact is always created in the context of a\nrun."
        },
        "task_id": {
          "type": "string",
          "description": "The Task that is associated with the creation of this artifact."
        },
        "producer_key": {
          "type": "string",
          "title": "The outgoing parameter name of this Artifact within this task's component spec.\nFor example:\ndef preprocess(my_output: dsl.Outputs[dsl.Artifact]):\n  ...\nhere the producer_key == \"my_output\"\nNote that producer_task_name == task_name"
        }
      }
    },
    "v2beta1CreateArtifactTaskRequest": {
      "type": "object",
      "properties": {
        "artifact_task": {
          "$ref": "#/definitions/v2beta1ArtifactTask",
          "description": "Required. The artifact-task relationship to create."
        }
      },
      "title": "Request to create an artifact-task relationship"
    },
    "v2beta1CreateArtifactTasksBulkRequest": {
      "type": "object",
      "properties": {
        "artifact_tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1ArtifactTask"
          },
          "description": "Required. The list of artifact-task relationships to create."
        }
      }
    },
    "v2beta1CreateArtifactTasksBulkResponse": {
      "type": "object",
      "properties": {
        "artifact_tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1ArtifactTask"
          },
          "description": "The list of created artifact-task relationships."
        }
      }
    },
    "v2beta1ListArtifactResponse": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1Artifact"
          },
          "description": "The list of artifacts returned."
        },
        "total_size": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of artifacts available. This field is not always populated."
        },
        "next_page_token": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no\nmore results in the list."
        }
      }
    },
    "v2beta1ListArtifactTasksResponse": {
      "type": "object",
      "properties": {
        "artifact_tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2beta1ArtifactTask"
          }
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
