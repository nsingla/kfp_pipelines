# coding: utf-8

"""
    Kubeflow Pipelines API

    This file contains REST API specification for Kubeflow Pipelines. The file is autogenerated from the swagger definition.

    Contact: kubeflow-pipelines@google.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kfp_server_api
from kfp_server_api.models.v2beta1_list_artifact_tasks_response import V2beta1ListArtifactTasksResponse  # noqa: E501
from kfp_server_api.rest import ApiException

class TestV2beta1ListArtifactTasksResponse(unittest.TestCase):
    """V2beta1ListArtifactTasksResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V2beta1ListArtifactTasksResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kfp_server_api.models.v2beta1_list_artifact_tasks_response.V2beta1ListArtifactTasksResponse()  # noqa: E501
        if include_optional :
            return V2beta1ListArtifactTasksResponse(
                artifact_tasks = [
                    kfp_server_api.models.v2beta1_artifact_task.v2beta1ArtifactTask(
                        id = '0', 
                        artifact_id = '0', 
                        run_id = '0', 
                        task_id = '0', 
                        type = 'INPUT', 
                        producer_task_name = '0', 
                        producer_key = '0', 
                        artifact_key = '0', )
                    ], 
                total_size = 56, 
                next_page_token = '0'
            )
        else :
            return V2beta1ListArtifactTasksResponse(
        )

    def testV2beta1ListArtifactTasksResponse(self):
        """Test V2beta1ListArtifactTasksResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
